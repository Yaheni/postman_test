{
	"info": {
		"_postman_id": "c3e565a9-ac40-4c1b-8b4e-a4db13b2a779",
		"name": "zags_senla_for_nastya",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5288563"
	},
	"item": [
		{
			"name": "Создание заявки",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();\r",
							"let applicationid = responseJson.data.applicationid;\r",
							"pm.environment.set(\"applicationid_variable\", applicationid);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "senlatest",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mode\": \"wedding\", //death birth\r\n    \"personalLastName\":\"Петров\",\r\n    \"personalFirstName\":\"Василий\",\r\n    \"personalMiddleName\":\"Васильевич\",\r\n    \"personalPhoneNumber\":\"1234567\",\r\n    \"personalNumberOfPassport\":\"123445\",\r\n    \"citizenLastName\":\"Петров\",\r\n    \"citizenFirstName\":\"Василий\",\r\n    \"citizenMiddleName\":\"Васильевич\",\r\n    \"citizenBirthDate\":\"2000-01-01\",\r\n    \"citizenNumberOfPassport\":\"123123\",\r\n    \"citizenGender\":\"Мужской\",\r\n    \"dateOfMarriage\":\"2000-01-01\",\r\n    \"newLastName\": \"qwert\",\r\n    \"anotherPersonLastName\": \"c\",\r\n    \"anotherPersonFirstName\": \"a\",\r\n    \"anotherPersonMiddleName\": \"b\",\r\n    \"birth_of_anotoherPerson\":\"1970-01-01\",\r\n    \"anotherPersonPassport\": \"1234678\",\r\n    \"birth_place\":\"Москва\",\r\n    \"birth_mother\":\"Мать\",\r\n    \"birth_father\":\"Отец\",\r\n    \"death_dateOfDeath\":null,\r\n    \"death_placeOfDeath\":null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/sendUserRequest",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sendUserRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение информации о статусе заявки",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/getApplStatus/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"getApplStatus",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Регистрация админа",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();\r",
							"let staffid = responseJson.data.staffid;\r",
							"pm.environment.set(\"staffid_variable\", staffid);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "senlatest",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"dateofbirth\": \"2000-01-02\",\r\n  \"personalFirstName\": \"Админов\",\r\n  \"personalLastName\": \"Админ\",\r\n  \"personalMiddleName\": \"Админович\",\r\n  \"personalNumberOfPassport\": \"1111111\",\r\n  \"personalPhoneNumber\": \"0000000000000\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/sendAdminRequest",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"sendAdminRequest"
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение статуса заявки - Одобрена",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "senlatest",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"applId\": 1,\r\n  \"staffid\": 1,\r\n  \"action\": \"approved\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/requestProcess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"requestProcess"
					]
				}
			},
			"response": []
		},
		{
			"name": "Изменение статуса заявки - Отклонена",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "senlatest",
							"type": "string"
						},
						{
							"key": "username",
							"value": "user",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"applId\": 1,\r\n  \"staffid\": 1,\r\n  \"action\": \"rejected\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/requestProcess",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"requestProcess"
					]
				}
			},
			"response": []
		},
		{
			"name": "getDocument",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Content-Type is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"console.log(pm.response.headers.contentSize())\r",
							"pm.test(\"Check content-type is PDF\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/pdf\");\r",
							"});\r",
							"pm.test(\"Check filename\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Disposition\")).to.eql(`attachment; filename=\"${pm.variables.get(\"idBirth\")}.pdf\"`);\r",
							"});\r",
							"console.log(`attachment; filename=\"${pm.variables.get(\"idWedding\")}.pdf\"`);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Basic dXNlcjpzZW5sYXRlc3Q="
					}
				],
				"url": {
					"raw": "localhost:8001/getDocument/id",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"getDocument",
						"id"
					]
				}
			},
			"response": []
		},
		{
			"name": "generateDoc",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"appid\": id\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8001/generateDoc",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"generateDoc"
					]
				}
			},
			"response": []
		},
		{
			"name": "Все заявки",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000/getApplications",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"getApplications"
					]
				}
			},
			"response": []
		}
	]
}